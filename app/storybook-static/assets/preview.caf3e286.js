import{_ as c}from"./iframe.8520de00.js";function p(n,t,a,u,e,r,o){try{var s=n[r](o),i=s.value}catch(g){a(g);return}s.done?t(i):Promise.resolve(i).then(u,e)}function f(n){return function(){var t=this,a=arguments;return new Promise(function(u,e){var r=n.apply(t,a);function o(i){p(r,u,e,o,s,"next",i)}function s(i){p(r,u,e,o,s,"throw",i)}o(void 0)})}}var m={docs:{getContainer:function(){var n=f(regeneratorRuntime.mark(function a(){return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,c(()=>import("./index.952516d1.js").then(function(r){return r.K}),["assets/index.952516d1.js","assets/index.d51b119a.js","assets/iframe.8520de00.js","assets/string.bf3fd91c.js"]);case 2:return e.abrupt("return",e.sent.DocsContainer);case 3:case"end":return e.stop()}},a)}));function t(){return n.apply(this,arguments)}return t}(),getPage:function(){var n=f(regeneratorRuntime.mark(function a(){return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,c(()=>import("./index.952516d1.js").then(function(r){return r.K}),["assets/index.952516d1.js","assets/index.d51b119a.js","assets/iframe.8520de00.js","assets/string.bf3fd91c.js"]);case 2:return e.abrupt("return",e.sent.DocsPage);case 3:case"end":return e.stop()}},a)}));function t(){return n.apply(this,arguments)}return t}()}};export{m as parameters};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJtYXBwaW5ncyI6InlDQUlBLFNBQVNBLEVBQW1CQyxFQUFLQyxFQUFTQyxFQUFRQyxFQUFPQyxFQUFRQyxFQUFLQyxFQUFLLENBQUUsR0FBSSxDQUFFLElBQUlDLEVBQU9QLEVBQUlLLEdBQUtDLENBQUcsRUFBT0UsRUFBUUQsRUFBSyxZQUFnQkUsRUFBUCxDQUFnQlAsRUFBT08sQ0FBSyxFQUFHLE1BQVMsQ0FBS0YsRUFBSyxLQUFRTixFQUFRTyxDQUFLLEVBQVksUUFBUSxRQUFRQSxDQUFLLEVBQUUsS0FBS0wsRUFBT0MsQ0FBTSxDQUFNLENBRXpRLFNBQVNNLEVBQWtCQyxFQUFJLENBQUUsT0FBTyxVQUFZLENBQUUsSUFBSUMsRUFBTyxLQUFNQyxFQUFPLFVBQVcsT0FBTyxJQUFJLFFBQVEsU0FBVVosRUFBU0MsRUFBUSxDQUFFLElBQUlGLEVBQU1XLEVBQUcsTUFBTUMsRUFBTUMsQ0FBSSxFQUFHLFNBQVNWLEVBQU1LLEVBQU8sQ0FBRVQsRUFBbUJDLEVBQUtDLEVBQVNDLEVBQVFDLEVBQU9DLEVBQVEsT0FBUUksQ0FBSyxDQUFJLENBQUMsU0FBU0osRUFBT1UsRUFBSyxDQUFFZixFQUFtQkMsRUFBS0MsRUFBU0MsRUFBUUMsRUFBT0MsRUFBUSxRQUFTVSxDQUFHLEVBQUtYLEVBQU0sTUFBUyxFQUFJLENBQUksQ0FBRyxDQUUzWCxJQUFDWSxFQUFhLENBQ3RCLEtBQU0sQ0FDSixhQUFjLFVBQVksQ0FDeEIsSUFBSUMsRUFBZ0JOLEVBQWdDLG1CQUFtQixLQUFLLFNBQVNPLEdBQVUsQ0FDN0YsT0FBTyxtQkFBbUIsS0FBSyxTQUFrQkMsRUFBVSxDQUN6RCxPQUNFLE9BQVFBLEVBQVMsS0FBT0EsRUFBUyxVQUMxQixHQUNILFNBQVMsS0FBTyxFQUNWQyxNQUFDLE9BQU8sdUJBQVUsbUpBRXJCLEdBQ0gsT0FBT0QsRUFBUyxPQUFPLFNBQVVBLEVBQVMsS0FBSyxhQUFhLE1BRXpELE9BQ0EsTUFDSCxPQUFPQSxFQUFTLE9BR3ZCLEVBQUVELENBQU8sQ0FDWCxFQUFDLEVBRUYsU0FBU0csR0FBZSxDQUN0QixPQUFPSixFQUFjLE1BQU0sS0FBTSxTQUFTLENBQzNDLENBRUQsT0FBT0ksQ0FDYixFQUFPLEVBQ0gsUUFBUyxVQUFZLENBQ25CLElBQUlDLEVBQVdYLEVBQWdDLG1CQUFtQixLQUFLLFNBQVNZLEdBQVcsQ0FDekYsT0FBTyxtQkFBbUIsS0FBSyxTQUFtQkMsRUFBVyxDQUMzRCxPQUNFLE9BQVFBLEVBQVUsS0FBT0EsRUFBVSxVQUM1QixHQUNILFNBQVUsS0FBTyxFQUNYSixNQUFDLE9BQU8sdUJBQVUsbUpBRXJCLEdBQ0gsT0FBT0ksRUFBVSxPQUFPLFNBQVVBLEVBQVUsS0FBSyxRQUFRLE1BRXRELE9BQ0EsTUFDSCxPQUFPQSxFQUFVLE9BR3hCLEVBQUVELENBQVEsQ0FDWixFQUFDLEVBRUYsU0FBU0UsR0FBVSxDQUNqQixPQUFPSCxFQUFTLE1BQU0sS0FBTSxTQUFTLENBQ3RDLENBRUQsT0FBT0csQ0FDYixFQUFPLENBQ0osQ0FDSCIsIm5hbWVzIjpbImFzeW5jR2VuZXJhdG9yU3RlcCIsImdlbiIsInJlc29sdmUiLCJyZWplY3QiLCJfbmV4dCIsIl90aHJvdyIsImtleSIsImFyZyIsImluZm8iLCJ2YWx1ZSIsImVycm9yIiwiX2FzeW5jVG9HZW5lcmF0b3IiLCJmbiIsInNlbGYiLCJhcmdzIiwiZXJyIiwicGFyYW1ldGVycyIsIl9nZXRDb250YWluZXIiLCJfY2FsbGVlIiwiX2NvbnRleHQiLCJfX3ZpdGVQcmVsb2FkIiwiZ2V0Q29udGFpbmVyIiwiX2dldFBhZ2UiLCJfY2FsbGVlMiIsIl9jb250ZXh0MiIsImdldFBhZ2UiXSwic291cmNlcyI6WyIuLi8uLi9ub2RlX21vZHVsZXMvQHN0b3J5Ym9vay9hZGRvbi1kb2NzL2Rpc3QvZXNtL3ByZXZpZXcuanMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFwicmVnZW5lcmF0b3ItcnVudGltZS9ydW50aW1lLmpzXCI7XG5pbXBvcnQgXCJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZy5qc1wiO1xuaW1wb3J0IFwiY29yZS1qcy9tb2R1bGVzL2VzLnByb21pc2UuanNcIjtcblxuZnVuY3Rpb24gYXN5bmNHZW5lcmF0b3JTdGVwKGdlbiwgcmVzb2x2ZSwgcmVqZWN0LCBfbmV4dCwgX3Rocm93LCBrZXksIGFyZykgeyB0cnkgeyB2YXIgaW5mbyA9IGdlbltrZXldKGFyZyk7IHZhciB2YWx1ZSA9IGluZm8udmFsdWU7IH0gY2F0Y2ggKGVycm9yKSB7IHJlamVjdChlcnJvcik7IHJldHVybjsgfSBpZiAoaW5mby5kb25lKSB7IHJlc29sdmUodmFsdWUpOyB9IGVsc2UgeyBQcm9taXNlLnJlc29sdmUodmFsdWUpLnRoZW4oX25leHQsIF90aHJvdyk7IH0gfVxuXG5mdW5jdGlvbiBfYXN5bmNUb0dlbmVyYXRvcihmbikgeyByZXR1cm4gZnVuY3Rpb24gKCkgeyB2YXIgc2VsZiA9IHRoaXMsIGFyZ3MgPSBhcmd1bWVudHM7IHJldHVybiBuZXcgUHJvbWlzZShmdW5jdGlvbiAocmVzb2x2ZSwgcmVqZWN0KSB7IHZhciBnZW4gPSBmbi5hcHBseShzZWxmLCBhcmdzKTsgZnVuY3Rpb24gX25leHQodmFsdWUpIHsgYXN5bmNHZW5lcmF0b3JTdGVwKGdlbiwgcmVzb2x2ZSwgcmVqZWN0LCBfbmV4dCwgX3Rocm93LCBcIm5leHRcIiwgdmFsdWUpOyB9IGZ1bmN0aW9uIF90aHJvdyhlcnIpIHsgYXN5bmNHZW5lcmF0b3JTdGVwKGdlbiwgcmVzb2x2ZSwgcmVqZWN0LCBfbmV4dCwgX3Rocm93LCBcInRocm93XCIsIGVycik7IH0gX25leHQodW5kZWZpbmVkKTsgfSk7IH07IH1cblxuZXhwb3J0IHZhciBwYXJhbWV0ZXJzID0ge1xuICBkb2NzOiB7XG4gICAgZ2V0Q29udGFpbmVyOiBmdW5jdGlvbiAoKSB7XG4gICAgICB2YXIgX2dldENvbnRhaW5lciA9IF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZSgpIHtcbiAgICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUkKF9jb250ZXh0KSB7XG4gICAgICAgICAgd2hpbGUgKDEpIHtcbiAgICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQucHJldiA9IF9jb250ZXh0Lm5leHQpIHtcbiAgICAgICAgICAgICAgY2FzZSAwOlxuICAgICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSAyO1xuICAgICAgICAgICAgICAgIHJldHVybiBpbXBvcnQoJy4vYmxvY2tzJyk7XG5cbiAgICAgICAgICAgICAgY2FzZSAyOlxuICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5hYnJ1cHQoXCJyZXR1cm5cIiwgX2NvbnRleHQuc2VudC5Eb2NzQ29udGFpbmVyKTtcblxuICAgICAgICAgICAgICBjYXNlIDM6XG4gICAgICAgICAgICAgIGNhc2UgXCJlbmRcIjpcbiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuc3RvcCgpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH1cbiAgICAgICAgfSwgX2NhbGxlZSk7XG4gICAgICB9KSk7XG5cbiAgICAgIGZ1bmN0aW9uIGdldENvbnRhaW5lcigpIHtcbiAgICAgICAgcmV0dXJuIF9nZXRDb250YWluZXIuYXBwbHkodGhpcywgYXJndW1lbnRzKTtcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIGdldENvbnRhaW5lcjtcbiAgICB9KCksXG4gICAgZ2V0UGFnZTogZnVuY3Rpb24gKCkge1xuICAgICAgdmFyIF9nZXRQYWdlID0gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlMigpIHtcbiAgICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUyJChfY29udGV4dDIpIHtcbiAgICAgICAgICB3aGlsZSAoMSkge1xuICAgICAgICAgICAgc3dpdGNoIChfY29udGV4dDIucHJldiA9IF9jb250ZXh0Mi5uZXh0KSB7XG4gICAgICAgICAgICAgIGNhc2UgMDpcbiAgICAgICAgICAgICAgICBfY29udGV4dDIubmV4dCA9IDI7XG4gICAgICAgICAgICAgICAgcmV0dXJuIGltcG9ydCgnLi9ibG9ja3MnKTtcblxuICAgICAgICAgICAgICBjYXNlIDI6XG4gICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0Mi5hYnJ1cHQoXCJyZXR1cm5cIiwgX2NvbnRleHQyLnNlbnQuRG9jc1BhZ2UpO1xuXG4gICAgICAgICAgICAgIGNhc2UgMzpcbiAgICAgICAgICAgICAgY2FzZSBcImVuZFwiOlxuICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDIuc3RvcCgpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH1cbiAgICAgICAgfSwgX2NhbGxlZTIpO1xuICAgICAgfSkpO1xuXG4gICAgICBmdW5jdGlvbiBnZXRQYWdlKCkge1xuICAgICAgICByZXR1cm4gX2dldFBhZ2UuYXBwbHkodGhpcywgYXJndW1lbnRzKTtcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIGdldFBhZ2U7XG4gICAgfSgpXG4gIH1cbn07Il0sImZpbGUiOiJhc3NldHMvcHJldmlldy5jYWYzZTI4Ni5qcyJ9
